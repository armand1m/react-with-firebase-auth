{"version":3,"sources":["firebaseConfig.ts","UserForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Field","children","Input","value","onChange","props","event","target","SubmitButton","UserForm","onSubmit","useState","email","setEmail","password","setPassword","Fragment","type","onClick","firebaseApp","firebase","initializeApp","FormWrapper","style","marginLeft","Loading","position","display","top","alignItems","justifyContent","width","height","background","color","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","appleProvider","OAuthProvider","withFirebaseAuth","user","error","loading","setError","signOut","signInAnonymously","signInWithEmailAndPassword","signInWithGoogle","signInWithGithub","signInWithApple","createUserWithEmailAndPassword","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a42c15ad.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: 'AIzaSyC0hOjv4hqAvG-g7UxItugLuaj-6E2FOjI',\n  authDomain: 'react-firebase-auth-9d938.firebaseapp.com',\n  databaseURL: 'https://react-firebase-auth-9d938.firebaseio.com',\n  projectId: 'react-firebase-auth-9d938',\n  storageBucket: 'react-firebase-auth-9d938.appspot.com',\n  messagingSenderId: '975967064412',\n};\n\nexport default firebaseConfig;\n","import React, {\n  ButtonHTMLAttributes,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  useState,\n} from 'react';\n\nconst Field: React.FC = ({ children }) => (\n  <>\n    {children}\n    <br />\n  </>\n);\n\ntype HTMLInputProps = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype InputProps = Omit<HTMLInputProps, 'onChange'> & {\n  onChange: (value: string) => void;\n};\n\nconst Input = ({ value, onChange, ...props }: InputProps) => (\n  <input\n    {...props}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}\n  />\n);\n\ntype ButtonProps = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nconst SubmitButton = (props: ButtonProps) => (\n  <button {...props}>submit</button>\n);\n\ntype UserFormProps = {\n  onSubmit: (email: string, password: string) => void;\n};\n\nconst UserForm = ({ onSubmit }: UserFormProps) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <React.Fragment>\n      <Field>\n        email: <Input value={email} onChange={setEmail} />\n      </Field>\n      <Field>\n        password:{' '}\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n        />\n      </Field>\n      <SubmitButton onClick={() => onSubmit(email, password)} />\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport firebase from 'firebase';\nimport withFirebaseAuth, {\n  WrappedComponentProps,\n} from 'react-with-firebase-auth';\nimport firebaseConfig from './firebaseConfig';\nimport UserForm from './UserForm';\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst FormWrapper: React.FC = ({ children }) => (\n  <>\n    <div style={{ marginLeft: '1.34em' }}>{children}</div>\n    <hr />\n  </>\n);\n\nconst Loading = () => (\n  <div\n    style={{\n      position: 'fixed',\n      display: 'flex',\n      top: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      height: '2.68em',\n      background: 'green',\n      color: 'white',\n    }}>\n    Loading..\n  </div>\n);\n\nconst App: React.FC<WrappedComponentProps> = ({\n  user,\n  error,\n  loading,\n  setError,\n  signOut,\n  signInAnonymously,\n  signInWithEmailAndPassword,\n  signInWithGoogle,\n  signInWithGithub,\n  signInWithApple,\n  createUserWithEmailAndPassword,\n}) => (\n  <React.Fragment>\n    {loading && <Loading />}\n\n    <FormWrapper>\n      <h1>react-with-firebase-auth</h1>\n      <h3>a very simple demo showing it in action</h3>\n      <h3>see user data and errors in the end of this page</h3>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>create user</h1>\n      <UserForm onSubmit={createUserWithEmailAndPassword} />\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign in</h1>\n      <UserForm onSubmit={signInWithEmailAndPassword} />\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign in with google</h1>\n      <button onClick={signInWithGoogle}>sign in with google</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign in with apple</h1>\n      <button onClick={signInWithApple}>sign in with apple</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign in with github</h1>\n      <h3>(no provider setup, good to see error message)</h3>\n      <button onClick={signInWithGithub}>sign in with github</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign in anonymously</h1>\n      <h3>(failing due to permissions, good to see error message)</h3>\n      <button onClick={signInAnonymously}>sign in anonymously</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>sign out</h1>\n      <button onClick={signOut}>sign out</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>clear error</h1>\n      <button onClick={() => setError(null)}>clear error</button>\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>user data</h1>\n      <textarea\n        style={{ width: 350, height: 200 }}\n        value={JSON.stringify(user, null, 2)}\n      />\n    </FormWrapper>\n\n    <FormWrapper>\n      <h1>error data</h1>\n      <textarea style={{ width: 350, height: 200 }} value={error} />\n    </FormWrapper>\n  </React.Fragment>\n);\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n  appleProvider: new firebase.auth.OAuthProvider('apple.com'),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}